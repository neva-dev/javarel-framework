buildscript {
    apply from: project.rootProject.relativePath('buildscript.gradle'), to: buildscript
}

apply plugin: 'neva.osgi-container'

defaultTasks = ['clean', 'createOsgiContainer']
description = "OSGi based, written in Kotlin, MVC framework for web artisans from Java community"

allprojects {
    group 'com.neva.javarel'
    version "1.0.0.ALPHA"

    apply plugin: 'idea'
    apply plugin: 'base'

    repositories {
        mavenCentral()
        jcenter()
    }
}

dependencies {
    osgiModule project(':framework')
}

osgiContainer {
    felix()
    debug()
    later("javarel-*")
    javaArg('-Dderby.system.home=db')
    exclude([
            'slf4j-api-1.7.7*',
            'xml-apis-1.3*',
            'antlr',
            'animal-sniffer-annotations',
            'kxml2',
            'xmlpull',
    ])
}

subprojects { subProject ->

    plugins.withId 'kotlin', {
        jar.baseName = "javarel-${subProject.path.substring(1).replace(':', '-')}"

        sourceCompatibility = 1.7
        targetCompatibility = 1.7

        sourceSets {
            main.java.srcDirs += 'src/main/kotlin'
        }

        def compileOptions = {
            options.encoding = "UTF-8"
        }

        compileJava compileOptions
        compileTestJava compileOptions

        plugins.withId 'maven-publish', {
            publishing {
                publications {
                    mavenJava(MavenPublication) {
                        artifactId jar.baseName
                        from components.java
                    }
                }
            }
        }
    }

    plugins.withId 'neva.osgi-module', {
        jar {
            manifest {
                name subProject.description
                instruction 'Bundle-Category', 'javarel'
            }
        }
    }

}

