buildscript {
    apply from: rootProject.file('buildscript.gradle'), to: buildscript
}

description = 'Javarel :: Administrative Application'

apply plugin: 'kotlin'
apply plugin: 'osgi-module'
apply plugin: 'com.twcable.scr'

jar {
    manifest {
        name project.description
        instruction 'Export-Package', "com.neva.javarel.app.adm.*;version=${project.version}"
        instruction 'Component-Scan', 'com.neva.javarel.app.adm.*'
        instruction 'Resource-Namespace', 'adm'
        instruction 'Rest-Route-Alias', 'adm=com.neva.javarel.app.adm'
    }
}

dependencies {
    compile project(':app:core')
    compile project(':storage')

    // http://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'
}

task openJPAEnhance {
    description "Enhance JPA model classes using OpenJPA Enhancer"
    dependsOn compileJava

    outputs.upToDateWhen {false}

    doLast {
        // define the entity classes
        def entityFiles = fileTree(sourceSets.main.output.classesDir).matching {
            include '**/*.class'
        }

        println "Enhancing with OpenJPA, the following files..."
        entityFiles.getFiles().each {
            println it
        }

        // define Ant task for Enhancer
        ant.taskdef(
                name : 'openjpac',
                classpath : sourceSets.main.runtimeClasspath.asPath,
                classname : 'org.apache.openjpa.ant.PCEnhancerTask'
        )

        // Run the OpenJPA Enhancer as an Ant task
        //   - see OpenJPA 'PCEnhancerTask' for supported arguments
        //   - this invocation of the enhancer adds support for a default-ctor
        //   - as well as ensuring JPA property use is valid.
        ant.openjpac(
                classpath: sourceSets.main.runtimeClasspath.asPath,
                addDefaultConstructor: true,
                enforcePropertyRestrictions: true) {
            entityFiles.addToAntBuilder(ant, 'fileset', FileCollection.AntType.FileSet)
        }
    }
}

openJPAEnhance.dependsOn([compileJava,processResources])
classes.dependsOn openJPAEnhance